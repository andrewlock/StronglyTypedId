//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the StronglyTypedId source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

#if STRONGLY_TYPED_ID_EMBED_ATTRIBUTES

namespace StronglyTypedIds
{
    /// <summary>
    /// Place on partial structs to make the type a strongly-typed ID
    /// </summary>
    [global::System.AttributeUsage(global::System.AttributeTargets.Struct, Inherited = false, AllowMultiple = true)]
    [global::System.Diagnostics.Conditional("STRONGLY_TYPED_ID_USAGES")]
    internal sealed class StronglyTypedIdAttribute : global::System.Attribute
    {
        /// <summary>
        /// Make the struct a strongly typed ID.
        /// </summary>
        /// <param name="template">The built-in template to use to generate the ID.</param>
        public StronglyTypedIdAttribute(global::StronglyTypedIds.Template template)
        {
            Template = template;
        }

        /// <summary>
        /// Make the struct a strongly typed ID.
        /// </summary>
        /// <param name="templateName">The name of the template to use to generate the ID.
        /// Templates must be added to the project using the format NAME.typedid,
        /// where NAME is the name of the template passed in <paramref name="templateName"/>.
        /// </param>
        public StronglyTypedIdAttribute(string templateName)
        {
            TemplateName = templateName;
        }

        /// <summary>
        /// Make the struct a strongly typed ID, using the default template
        /// </summary>
        public StronglyTypedIdAttribute()
        {
        }

        /// <summary>
        /// The template to use to generate the strongly-typed ID value.
        /// </summary>
        public global::StronglyTypedIds.Template? Template { get; }

        /// <summary>
        /// The template to use to generate the strongly-typed ID value.
        /// </summary>
        public string? TemplateName { get; }
    }
}
#endif
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the StronglyTypedId source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

#if STRONGLY_TYPED_ID_EMBED_ATTRIBUTES

namespace StronglyTypedIds
{
    /// <summary>
    /// Used to control the default strongly typed ID values. Apply to an assembly using
    /// <code>[assembly:StronglyTypedIdDefaults(Template.Int)]</code> for example
    /// </summary>
    [global::System.AttributeUsage(global::System.AttributeTargets.Assembly, Inherited = false, AllowMultiple = false)]
    [global::System.Diagnostics.Conditional("STRONGLY_TYPED_ID_USAGES")]
    internal sealed class StronglyTypedIdDefaultsAttribute : global::System.Attribute
    {
        /// <summary>
        /// Set the default template to use for strongly typed IDs
        /// </summary>
        /// <param name="template">The built-in template to use to generate the ID.</param>
        public StronglyTypedIdDefaultsAttribute(global::StronglyTypedIds.Template template)
        {
            Template = template;
        }

        /// <summary>
        /// Set the default template to use for strongly typed IDs
        /// </summary>
        /// <param name="templateName">The name of the template to use to generate the ID.
        /// Templates must be added to the project using the format NAME.typedid,
        /// where NAME is the name of the template passed in <paramref name="templateName"/>.
        /// </param>
        public StronglyTypedIdDefaultsAttribute(string templateName)
        {
            TemplateName = templateName;
        }

        /// <summary>
        /// The default template to use to generate the strongly-typed ID value.
        /// </summary>
        public global::StronglyTypedIds.Template? Template { get; }

        /// <summary>
        /// The default template to use to generate the strongly-typed ID value.
        /// </summary>
        public string? TemplateName { get; }
    }
}
#endif
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the StronglyTypedId source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

#if STRONGLY_TYPED_ID_EMBED_ATTRIBUTES

using System;

namespace StronglyTypedIds
{
    /// <summary>
    /// The built-in template to use to generate the strongly-typed ID
    /// </summary>
    internal enum Template
    {
        Guid,
        Int,
        String,
        Long,
    }
}
#endif