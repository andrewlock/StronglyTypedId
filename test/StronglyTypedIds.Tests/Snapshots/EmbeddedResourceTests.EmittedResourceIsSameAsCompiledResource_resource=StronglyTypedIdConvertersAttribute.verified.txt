//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the StronglyTypedId source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

#nullable enable

#if STRONGLY_TYPED_ID_EMBED_ATTRIBUTES

namespace StronglyTypedIds
{
    /// <summary>
    /// Place on partial structs to generate converters for a strongly-typed ID, <typeparamref name="T"/>.
    /// </summary>
    [global::System.AttributeUsage(global::System.AttributeTargets.Struct, Inherited = false, AllowMultiple = false)]
    [global::System.Diagnostics.Conditional("STRONGLY_TYPED_ID_USAGES")]
    internal sealed class StronglyTypedIdConvertersAttribute<T> : global::System.Attribute
        where T: struct
    {
        /// <summary>
        /// Generate converters for a strongly typed ID  
        /// </summary>
        /// <param name="templateNames">The names of the template to use to generate the converters.
        /// Templates must be added to the project using the format NAME.typedid,
        /// where NAME is the name of the template passed in <paramref name="templateNames"/>.
        /// If no templates are provided, the default value is used, as specified by
        /// <see cref="StronglyTypedIdConvertersDefaultsAttribute"/>
        /// <typeparam name="T">The StronglyTyped ID implementation for which these converters are associated</typeparam>
        /// </param>
        public StronglyTypedIdConvertersAttribute(params string[] templateNames)
        {
        }
    }
}
#endif