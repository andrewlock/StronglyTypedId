//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the StronglyTypedId source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591 // publicly visible type or member must be documented

    readonly partial struct MyTestId 
    {
        public System.Guid Value { get; }

        public MyTestId(System.Guid value)
        {
            Value = value;
        }

        public static MyTestId New() => new MyTestId(System.Guid.NewGuid());
        public static readonly MyTestId Empty = new MyTestId(System.Guid.Empty);

        public bool Equals(MyTestId other) => this.Value.Equals(other.Value);
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is MyTestId other && Equals(other);
        }

        public override int GetHashCode() => Value.GetHashCode();

        public override string ToString() => Value.ToString();
        public static bool operator ==(MyTestId a, MyTestId b) => a.Equals(b);
        public static bool operator !=(MyTestId a, MyTestId b) => !(a == b);

        public class EfCoreValueConverter : Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter<MyTestId, System.Guid>
        {
            public EfCoreValueConverter() : this(null) { }
            public EfCoreValueConverter(Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = null)
                : base(
                    id => id.Value,
                    value => new MyTestId(value),
                    mappingHints
                ) { }
        }
    }
