//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the StronglyTypedId source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Some.Namespace
{
    readonly partial struct MyTestId : System.IComparable<MyTestId>
    {
        public MassTransit.NewId Value { get; }

        public MyTestId(MassTransit.NewId value)
        {
            Value = value;
        }

        public static MyTestId New() => new MyTestId(MassTransit.NewId.Next());
        public static readonly MyTestId Empty = new MyTestId(MassTransit.NewId.Empty);

        public bool Equals(MyTestId other) => this.Value.Equals(other.Value);
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            return obj is MyTestId other && Equals(other);
        }

        public override int GetHashCode() => Value.GetHashCode();

        public override string ToString() => Value.ToString();
        public static bool operator ==(MyTestId a, MyTestId b) => a.Equals(b);
        public static bool operator !=(MyTestId a, MyTestId b) => !(a == b);
        public int CompareTo(MyTestId other) => Value.CompareTo(other.Value);
    }
}
